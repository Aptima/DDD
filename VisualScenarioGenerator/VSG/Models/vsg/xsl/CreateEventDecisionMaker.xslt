<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2009

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema" exclude-result-prefixes="xs xsi xsl">
	<xsl:output method="xml" encoding="UTF-8" indent="yes"/>
	<xsl:template match="/">
		<Components>
			<xsl:attribute name="xsi:noNamespaceSchemaLocation">
				<xsl:value-of select="'/Config/Components.xsd'"/>
			</xsl:attribute>
			<xsl:variable name="var1_instance" select="."/>
			<xsl:for-each select="$var1_instance/Components/Component">
				<xsl:variable name="var2_Component" select="."/>
				<Component>
					<xsl:if test="$var2_Component/@eType">
						<xsl:attribute name="eType">
							<xsl:value-of select="string(@eType)"/>
						</xsl:attribute>
					</xsl:if>
					<xsl:if test="$var2_Component/@Type">
						<xsl:attribute name="Type">
							<xsl:value-of select="string(@Type)"/>
						</xsl:attribute>
					</xsl:if>
					<xsl:if test="$var2_Component/@Name">
						<xsl:attribute name="Name">
							<xsl:value-of select="string(@Name)"/>
						</xsl:attribute>
					</xsl:if>
					<xsl:if test="$var2_Component/@Description">
						<xsl:attribute name="Description">
							<xsl:value-of select="string(@Description)"/>
						</xsl:attribute>
					</xsl:if>
					<xsl:if test="$var2_Component/@LinkID">
						<xsl:attribute name="LinkID">
							<xsl:value-of select="string(@LinkID)"/>
						</xsl:attribute>
					</xsl:if>
					<xsl:if test="$var2_Component/@ID">
						<xsl:attribute name="ID">
							<xsl:value-of select="number(string(@ID))"/>
						</xsl:attribute>
					</xsl:if>
					<xsl:for-each select="ComponentParameters">
						<ComponentParameters>
							<xsl:for-each select="Parameter">
								<xsl:variable name="var6_Parameter" select="."/>
								<Parameter>
									<xsl:if test="$var6_Parameter/@category">
										<xsl:attribute name="category">
											<xsl:value-of select="string(@category)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:if test="$var6_Parameter/@type">
										<xsl:attribute name="type">
											<xsl:value-of select="string(@type)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:for-each select="Parameter">
										<xsl:variable name="var8_Parameter" select="."/>
										<Parameter>
											<xsl:if test="$var8_Parameter/@displayedName">
												<xsl:attribute name="displayedName">
													<xsl:value-of select="string(@displayedName)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:if test="$var8_Parameter/@propertyName">
												<xsl:attribute name="propertyName">
													<xsl:value-of select="string(@propertyName)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:if test="$var8_Parameter/@type">
												<xsl:attribute name="type">
													<xsl:value-of select="string(@type)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:if test="$var8_Parameter/@value">
												<xsl:attribute name="value">
													<xsl:value-of select="string(@value)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:if test="$var8_Parameter/@category">
												<xsl:attribute name="category">
													<xsl:value-of select="string(@category)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:if test="$var8_Parameter/@description">
												<xsl:attribute name="description">
													<xsl:value-of select="string(@description)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:if test="$var8_Parameter/@classOnly">
												<xsl:attribute name="classOnly">
													<xsl:value-of select="string(@classOnly)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:if test="$var8_Parameter/@browsable">
												<xsl:attribute name="browsable">
													<xsl:value-of select="string(@browsable)"/>
												</xsl:attribute>
											</xsl:if>
											<xsl:if test="$var8_Parameter/@editor">
												<xsl:attribute name="editor">
													<xsl:value-of select="string(@editor)"/>
												</xsl:attribute>
											</xsl:if>
										</Parameter>
									</xsl:for-each>
								</Parameter>
							</xsl:for-each>
						</ComponentParameters>
					</xsl:for-each>
					<Functions>
						<xsl:for-each select="Functions/Function">
							<xsl:variable name="var10_Function" select="."/>
							<Function>
								<xsl:if test="$var10_Function/@Name">
									<xsl:attribute name="Name">
										<xsl:value-of select="string(@Name)"/>
									</xsl:attribute>
								</xsl:if>
								<xsl:if test="$var10_Function/@Action">
									<xsl:attribute name="Action">
										<xsl:value-of select="string(@Action)"/>
									</xsl:attribute>
								</xsl:if>
								<xsl:if test="$var10_Function/@Visible">
									<xsl:attribute name="Visible">
										<xsl:value-of select="string(@Visible)"/>
									</xsl:attribute>
								</xsl:if>
							</Function>
						</xsl:for-each>
					</Functions>
					<Component>
						<xsl:attribute name="eType">
							<xsl:value-of select="'Component'"/>
						</xsl:attribute>
						<xsl:attribute name="Type">
							<xsl:value-of select="'DecisionMaker'"/>
						</xsl:attribute>
						<xsl:attribute name="Name">
							<xsl:value-of select="'Decision Makers'"/>
						</xsl:attribute>
						<xsl:attribute name="Description">
							<xsl:value-of select="''"/>
						</xsl:attribute>
						<xsl:attribute name="LinkID">
							<xsl:value-of select="'-1'"/>
						</xsl:attribute>
						<xsl:attribute name="ID">
							<xsl:value-of select="number(string('-1'))"/>
						</xsl:attribute>
						<ComponentParameters/>
						<Functions/>
						<xsl:for-each select="Component">
							<xsl:variable name="var12_Component" select="."/>
							<xsl:variable name="var14_cond_result_exists">
								<xsl:choose>
									<xsl:when test="string(boolean($var12_Component/@Type)) != 'false'">
										<xsl:choose>
											<xsl:when test="string((string(@Type) = 'DecisionMaker')) != 'false'">
												<xsl:value-of select="'1'"/>
											</xsl:when>
											<xsl:otherwise/>
										</xsl:choose>
									</xsl:when>
									<xsl:otherwise/>
								</xsl:choose>
							</xsl:variable>
							<xsl:if test="string(boolean(string($var14_cond_result_exists))) != 'false'">
								<Component>
									<xsl:if test="$var12_Component/@eType">
										<xsl:attribute name="eType">
											<xsl:value-of select="string(@eType)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:if test="$var12_Component/@Type">
										<xsl:attribute name="Type">
											<xsl:value-of select="string(@Type)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:if test="$var12_Component/@Name">
										<xsl:attribute name="Name">
											<xsl:value-of select="string(@Name)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:if test="$var12_Component/@Description">
										<xsl:attribute name="Description">
											<xsl:value-of select="string(@Description)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:if test="$var12_Component/@LinkID">
										<xsl:attribute name="LinkID">
											<xsl:value-of select="string(@LinkID)"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:if test="$var12_Component/@ID">
										<xsl:attribute name="ID">
											<xsl:value-of select="number(string(@ID))"/>
										</xsl:attribute>
									</xsl:if>
									<xsl:for-each select="ComponentParameters">
										<ComponentParameters>
											<xsl:for-each select="Parameter">
												<xsl:variable name="var17_Parameter" select="."/>
												<Parameter>
													<xsl:if test="$var17_Parameter/@category">
														<xsl:attribute name="category">
															<xsl:value-of select="string(@category)"/>
														</xsl:attribute>
													</xsl:if>
													<xsl:if test="$var17_Parameter/@type">
														<xsl:attribute name="type">
															<xsl:value-of select="string(@type)"/>
														</xsl:attribute>
													</xsl:if>
													<xsl:for-each select="Parameter">
														<xsl:variable name="var19_Parameter" select="."/>
														<Parameter>
															<xsl:if test="$var19_Parameter/@displayedName">
																<xsl:attribute name="displayedName">
																	<xsl:value-of select="string(@displayedName)"/>
																</xsl:attribute>
															</xsl:if>
															<xsl:if test="$var19_Parameter/@propertyName">
																<xsl:attribute name="propertyName">
																	<xsl:value-of select="string(@propertyName)"/>
																</xsl:attribute>
															</xsl:if>
															<xsl:if test="$var19_Parameter/@type">
																<xsl:attribute name="type">
																	<xsl:value-of select="string(@type)"/>
																</xsl:attribute>
															</xsl:if>
															<xsl:if test="$var19_Parameter/@value">
																<xsl:attribute name="value">
																	<xsl:value-of select="string(@value)"/>
																</xsl:attribute>
															</xsl:if>
															<xsl:if test="$var19_Parameter/@category">
																<xsl:attribute name="category">
																	<xsl:value-of select="string(@category)"/>
																</xsl:attribute>
															</xsl:if>
															<xsl:if test="$var19_Parameter/@description">
																<xsl:attribute name="description">
																	<xsl:value-of select="string(@description)"/>
																</xsl:attribute>
															</xsl:if>
															<xsl:if test="$var19_Parameter/@classOnly">
																<xsl:attribute name="classOnly">
																	<xsl:value-of select="string(@classOnly)"/>
																</xsl:attribute>
															</xsl:if>
															<xsl:if test="$var19_Parameter/@browsable">
																<xsl:attribute name="browsable">
																	<xsl:value-of select="string(@browsable)"/>
																</xsl:attribute>
															</xsl:if>
															<xsl:if test="$var19_Parameter/@editor">
																<xsl:attribute name="editor">
																	<xsl:value-of select="string(@editor)"/>
																</xsl:attribute>
															</xsl:if>
														</Parameter>
													</xsl:for-each>
												</Parameter>
											</xsl:for-each>
										</ComponentParameters>
									</xsl:for-each>
									<Functions>
										<Function>
											<xsl:attribute name="Name">
												<xsl:value-of select="'Create Unit'"/>
											</xsl:attribute>
											<xsl:attribute name="Action">
												<xsl:value-of select="'createObjectInstance'"/>
											</xsl:attribute>
											<xsl:attribute name="Visible">
												<xsl:value-of select="'True'"/>
											</xsl:attribute>
										</Function>
										<Function>
											<xsl:attribute name="Name">
												<xsl:value-of select="'Drag'"/>
											</xsl:attribute>
											<xsl:attribute name="Action">
												<xsl:value-of select="'ApplicationNodes.CreateInstanceTreeNode'"/>
											</xsl:attribute>
											<xsl:attribute name="Visible">
												<xsl:value-of select="'False'"/>
											</xsl:attribute>
										</Function>
									</Functions>
									<xsl:for-each select="/Components/Component/Component">
										<xsl:variable name="var21_Component" select="."/>
										<xsl:variable name="var23_cond_result_exists">
											<xsl:choose>
												<xsl:when test="string(boolean($var12_Component/@Name)) != 'false'">
													<xsl:for-each select="Component">
														<xsl:variable name="var30_Component" select="."/>
														<xsl:choose>
															<xsl:when test="string(boolean($var30_Component/@Name)) != 'false'">
																<xsl:choose>
																	<xsl:when test="string(boolean($var21_Component/@Type)) != 'false'">
																		<xsl:choose>
																			<xsl:when test="string(((string($var12_Component/@Name) = string(@Name)) and ('CreateEvent' = string($var21_Component/@Type)))) != 'false'">
																				<xsl:value-of select="'1'"/>
																			</xsl:when>
																			<xsl:otherwise/>
																		</xsl:choose>
																	</xsl:when>
																	<xsl:otherwise/>
																</xsl:choose>
															</xsl:when>
															<xsl:otherwise/>
														</xsl:choose>
													</xsl:for-each>
												</xsl:when>
												<xsl:otherwise/>
											</xsl:choose>
										</xsl:variable>
										<xsl:if test="string(boolean(string($var23_cond_result_exists))) != 'false'">
											<Component>
												<xsl:if test="$var21_Component/@eType">
													<xsl:attribute name="eType">
														<xsl:value-of select="string(@eType)"/>
													</xsl:attribute>
												</xsl:if>
												<xsl:if test="$var21_Component/@Type">
													<xsl:attribute name="Type">
														<xsl:value-of select="string(@Type)"/>
													</xsl:attribute>
												</xsl:if>
												<xsl:if test="$var21_Component/@Name">
													<xsl:attribute name="Name">
														<xsl:value-of select="string(@Name)"/>
													</xsl:attribute>
												</xsl:if>
												<xsl:if test="$var21_Component/@Description">
													<xsl:attribute name="Description">
														<xsl:value-of select="string(@Description)"/>
													</xsl:attribute>
												</xsl:if>
												<xsl:if test="$var21_Component/@LinkID">
													<xsl:attribute name="LinkID">
														<xsl:value-of select="string(@LinkID)"/>
													</xsl:attribute>
												</xsl:if>
												<xsl:if test="$var21_Component/@ID">
													<xsl:attribute name="ID">
														<xsl:value-of select="number(string(@ID))"/>
													</xsl:attribute>
												</xsl:if>
												<xsl:for-each select="ComponentParameters">
													<ComponentParameters>
														<xsl:for-each select="Parameter">
															<xsl:variable name="var26_Parameter" select="."/>
															<Parameter>
																<xsl:if test="$var26_Parameter/@category">
																	<xsl:attribute name="category">
																		<xsl:value-of select="string(@category)"/>
																	</xsl:attribute>
																</xsl:if>
																<xsl:if test="$var26_Parameter/@type">
																	<xsl:attribute name="type">
																		<xsl:value-of select="string(@type)"/>
																	</xsl:attribute>
																</xsl:if>
																<xsl:for-each select="Parameter">
																	<xsl:variable name="var28_Parameter" select="."/>
																	<Parameter>
																		<xsl:if test="$var28_Parameter/@displayedName">
																			<xsl:attribute name="displayedName">
																				<xsl:value-of select="string(@displayedName)"/>
																			</xsl:attribute>
																		</xsl:if>
																		<xsl:if test="$var28_Parameter/@propertyName">
																			<xsl:attribute name="propertyName">
																				<xsl:value-of select="string(@propertyName)"/>
																			</xsl:attribute>
																		</xsl:if>
																		<xsl:if test="$var28_Parameter/@type">
																			<xsl:attribute name="type">
																				<xsl:value-of select="string(@type)"/>
																			</xsl:attribute>
																		</xsl:if>
																		<xsl:if test="$var28_Parameter/@value">
																			<xsl:attribute name="value">
																				<xsl:value-of select="string(@value)"/>
																			</xsl:attribute>
																		</xsl:if>
																		<xsl:if test="$var28_Parameter/@category">
																			<xsl:attribute name="category">
																				<xsl:value-of select="string(@category)"/>
																			</xsl:attribute>
																		</xsl:if>
																		<xsl:if test="$var28_Parameter/@description">
																			<xsl:attribute name="description">
																				<xsl:value-of select="string(@description)"/>
																			</xsl:attribute>
																		</xsl:if>
																		<xsl:if test="$var28_Parameter/@classOnly">
																			<xsl:attribute name="classOnly">
																				<xsl:value-of select="string(@classOnly)"/>
																			</xsl:attribute>
																		</xsl:if>
																		<xsl:if test="$var28_Parameter/@browsable">
																			<xsl:attribute name="browsable">
																				<xsl:value-of select="string(@browsable)"/>
																			</xsl:attribute>
																		</xsl:if>
																		<xsl:if test="$var28_Parameter/@editor">
																			<xsl:attribute name="editor">
																				<xsl:value-of select="string(@editor)"/>
																			</xsl:attribute>
																		</xsl:if>
																	</Parameter>
																</xsl:for-each>
															</Parameter>
														</xsl:for-each>
													</ComponentParameters>
												</xsl:for-each>
												<Functions>
													<Function>
														<xsl:attribute name="Name">
															<xsl:value-of select="'Delete'"/>
														</xsl:attribute>
														<xsl:attribute name="Action">
															<xsl:value-of select="'deleteCreateEvent'"/>
														</xsl:attribute>
														<xsl:attribute name="Visible">
															<xsl:value-of select="'True'"/>
														</xsl:attribute>
													</Function>
													<Function>
														<xsl:attribute name="Name">
															<xsl:value-of select="'Rename'"/>
														</xsl:attribute>
														<xsl:attribute name="Action">
															<xsl:value-of select="'RenameComponent'"/>
														</xsl:attribute>
														<xsl:attribute name="Visible">
															<xsl:value-of select="'True'"/>
														</xsl:attribute>
													</Function>
													<Function>
														<xsl:attribute name="Name">
															<xsl:value-of select="'Duplicate'"/>
														</xsl:attribute>
														<xsl:attribute name="Action">
															<xsl:value-of select="'copyMultipleCreateEvent'"/>
														</xsl:attribute>
														<xsl:attribute name="Visible">
															<xsl:value-of select="'True'"/>
														</xsl:attribute>
													</Function>
													<Function>
														<xsl:attribute name="Name">
															<xsl:value-of select="'Drag'"/>
														</xsl:attribute>
														<xsl:attribute name="Action">
															<xsl:value-of select="'ApplicationNodes.EventTreeNode'"/>
														</xsl:attribute>
														<xsl:attribute name="Visible">
															<xsl:value-of select="'False'"/>
														</xsl:attribute>
													</Function>
												</Functions>
											</Component>
										</xsl:if>
									</xsl:for-each>
								</Component>
							</xsl:if>
						</xsl:for-each>
					</Component>
					<Component>
						<xsl:attribute name="eType">
							<xsl:value-of select="'Component'"/>
						</xsl:attribute>
						<xsl:attribute name="Type">
							<xsl:value-of select="'GlobalEvent'"/>
						</xsl:attribute>
						<xsl:attribute name="Name">
							<xsl:value-of select="'Global Events'"/>
						</xsl:attribute>
						<xsl:attribute name="Description">
							<xsl:value-of select="''"/>
						</xsl:attribute>
						<xsl:attribute name="LinkID">
							<xsl:value-of select="'-1'"/>
						</xsl:attribute>
						<xsl:attribute name="ID">
							<xsl:value-of select="number(string('-1'))"/>
						</xsl:attribute>
						<ComponentParameters/>
						<Functions/>
					</Component>
				</Component>
			</xsl:for-each>
		</Components>
	</xsl:template>
</xsl:stylesheet>
